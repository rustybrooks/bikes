# version: '3.5'

services:
  api:
    build:
      context: ./src/
      dockerfile: Dockerfile
      target: base
      args:
        PRODUCTION: "${PRODUCTION:-false}"
    image: bikes-api:latest
    container_name: api
    ports:
      - "3000:3000"
    volumes:
      - ./data/:/srv/data
      - ./src/api:/srv/src/app
    environment:
      - ENVIRONMENT=local
      - DEBUG=${DEBUG:-true}
      - DATA_ROOT=/srv/data
      - CLIENT_ID=${CLIENT_ID:-9981}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - DB_HOST=db
      - DB_USER=wombat
      - DB_PASSWORD=1wombat2
      - DJANGO_SECRET_KEY=bananas
    entrypoint: ./manage.py runserver 0.0.0.0:3000
    depends_on:
      db:
        condition: service_healthy

  manage:
    extends: api
    entrypoint: ./manage.py
    profiles:
      - manual
    depends_on:
      db:
        condition: service_healthy

#  bikedb:
#    build:
#      context: ./src/
#      dockerfile: Dockerfile
#    image: bikes-api:latest
#    container_name: bikedb
#    volumes:
#      - ./data/:/srv/data
#      - ./src/:/srv/src
#    environment:
#      - ENVIRONMENT=dev
#      - DATA_ROOT=/srv/data
#      - CLIENT_ID=${CLIENT_ID:-9981}
#      - CLIENT_SECRET=${CLIENT_SECRET}
#      - FLASK_STORAGE=0
#      - DB_HOST=postgres
#      - DB_USER=wombat
#      - DB_PASSWORD=1wombat2
#    entrypoint: /srv/src/bikedb/entrypoint.sh
#    depends_on:
#      db:
#        condition: service_healthy

  ui:
    build:
      context: ./src/ui
      dockerfile: Dockerfile
    image: bikes-ui:latest
    container_name: ui
    volumes:
      - ./src/ui/src:/srv/src/ui/src
      - ./src/ui/public:/srv/src/ui/public
    environment:
      - ENVIRONMENT=dev
    ports:
        - "5000:5000"

  db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_DB=bikes
      - POSTGRES_USER=wombat
      - POSTGRES_PASSWORD=1wombat2
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U wombat -d bikes" ]
      interval: 1s
      timeout: 15s
      retries: 3
    stop_grace_period: 2m